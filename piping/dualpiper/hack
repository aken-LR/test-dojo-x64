#!/opt/pwn.college/bash

if [[ "$1" =~ "/dev/fd"* ]]
then
	fold -s <<< "It looks like you passed something like '>(something)' as an *argument* to /challenge/hack rather than redirecting /challenge/hack's out/error to '>(something)'. Remember, 'cmd1 >(cmd2)' does *NOT* redirect output of cmd1; rather, it'll run cmd2, hook a file up to its standard input, and pass that file as an argument to cmd1. If you want to redirect cmd1's output into that file, you will need to do: 'cmd1 > >(cmd2)', which is equivalent to 'cmd1 | cmd2'."
fi

if [ -t 1 ] || [ -f /dev/fd/1 ]
then
	fold -s <<< "You must redirect my standard output into '/challenge/planet'!"
else
	fold -s <<< "This secret data must directly make it to /challenge/planet over my stdout. Don't try to copy-paste it; it changes too fast."
	cat /challenge/.challenge-key-stdout
fi

if [ -t 2 ] || [ -f /dev/fd/2 ]
then
	fold -s >&2 <<< "You must redirect my standard error into '/challenge/the'!"
else
	fold -s >&2 <<< "This secret data must directly make it to /challenge/the over my stderr. Don't try to copy-paste it; it changes too fast."
	cat /challenge/.challenge-key-stderr >&2
fi

sleep 1
